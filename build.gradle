buildscript {
	ext {
		springBootVersion = '2.0.3.RELEASE'
	}
	repositories {
		mavenCentral()
		jcenter()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath 'org.asciidoctor:asciidoctor-gradle-plugin:1.5.7'
	}
}

plugins {
	id "org.asciidoctor.convert" version "1.5.7"
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.ignoretheextraclub'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

ext {
	javadocJsonDir = file("$buildDir/generated-javadoc-json")
	snippetsDir = file("${project.buildDir}/generated-snippets")
	asciidocInputDir = file("${project.projectDir}/src/main/asciidoc/")
	asciidocOutputDir = file("${project.projectDir}/docs")
}

repositories {
	mavenCentral()
	maven { url 'https://jitpack.io' }
	jcenter()
}

configurations {
	jsondoclet
}

dependencies {
	asciidoctor 'org.springframework.restdocs:spring-restdocs-asciidoctor:2.0.1.RELEASE'
	compile('com.github.funkybookends:SiteswapFactory:0.2.1') {
		exclude module : 'slf4j-log4j12'
	}
	compile('org.springframework.boot:spring-boot-starter-actuator')
	compile('org.springframework.boot:spring-boot-starter-cache')
	compile('org.springframework.boot:spring-boot-starter-data-elasticsearch')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.boot:spring-boot-starter-thymeleaf')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-websocket')
	compile('org.springframework.session:spring-session-core')
	compile group: 'org.jfree', name: 'jfreesvg', version: '3.3'
	runtime('org.springframework.boot:spring-boot-devtools')
	compileOnly('org.springframework.boot:spring-boot-configuration-processor')
	compileOnly('org.projectlombok:lombok')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.springframework.restdocs:spring-restdocs-mockmvc')
	testCompile('org.springframework.security:spring-security-test')
	testCompile group: 'capital.scalable', name: 'spring-auto-restdocs-core', version: '2.0.1'
	jsondoclet group: 'capital.scalable', name: 'spring-auto-restdocs-json-doclet', version: '2.0.1'
}

task jsonDoclet(type: Javadoc, dependsOn: compileJava) {
	source = sourceSets.main.allJava
	classpath = sourceSets.main.compileClasspath
	destinationDir = javadocJsonDir
	options.docletpath = configurations.jsondoclet.files.asType(List)
	options.doclet = 'capital.scalable.restdocs.jsondoclet.ExtractDocumentationAsJsonDoclet'
	options.memberLevel = JavadocMemberLevel.PACKAGE
}

asciidoctor {
	logDocuments = true
	backends = ['pdf', 'html5']
	attributes = [
			'snippets': snippetsDir,
			'toc': 'left',
			'toclevels': '3',
			'reproducible': true
	]
	inputs.dir snippetsDir
	sourceDir = asciidocInputDir
	outputDir = asciidocOutputDir

	dependsOn jsonDoclet
}

test {
	systemProperty 'org.springframework.restdocs.outputDir', snippetsDir
	systemProperty 'org.springframework.restdocs.javadocJsonDir', javadocJsonDir

	dependsOn jsonDoclet
	outputs.dir snippetsDir
}

//jar {
//	dependsOn asciidoctor
//	from ("${asciidoctor.outputDir}/html5") {
//		into 'static/docs'
//	}
//}